#!/bin/bash

_send-picture() {
  # Creates and image and attempts to email it to a previously-provided
  # email address.
  
  OF=$2/microscope-image-$(date +%s).png
  raspistill -o $OF -w 1920 -h 1080

  echo "sending email..."
  mpack -s "Microscope Picture" $OF $1
  echo "finished send attempt, did it work?"
}

_key-press() {
  # Detects a key press, and returns the pressed key.

  local kp
  ESC=$'\e'
  _KEY=
  read -d '' -sn1 _KEY
  case $_KEY in
    "$ESC")
       while read -d '' -sn1 -t1 kp
       do
	 _KEY=$_KEY$KP
         case $kp in
           [a-zA-NP-Z~]) break;;
         esac
       done
    ;;
  esac
  printf -v "${1:-_KEY}" "%s" "$_KEY"
}

_end-vid() {
  # Kill a raspivid instance silently, if one is running.
  
  VID_PROC=$(ps | grep "raspivid" &)
  VID_ID=${VID_PROC:1:4}
  kill -9 $VID_ID
  wait $VID_ID 2> /dev/null
}

# The actual meat.  Collects an email address, starts up
# a raspivid instance, then waits for keypress to kill
# raspivid, take a picture, then bring raspivid back up.
# Suuuuper elegant and def. not a hack at all.

clear

ODIR=$HOME/img/$(date +%Y-%m-%d)
mkdir $ODIR 2> /dev/null

echo "To what email address should I send pictures?"
read EMAIL
while [ -z $EMAIL ]; do
  echo "Gotta give me something!"
  read EMAIL
done
echo "Thanks, I'll send pictures to $EMAIL"

echo "Starting camera... "
raspivid -t 0 &

while [ 1 = 1 ]; do
  
  _key-press key

  if [ $key = 'p' ]; then
    _end-vid
    _send-picture $EMAIL $ODIR

    raspivid -t 0 &
  fi

  if [ $key = 'q' ]; then
    _end-vid
    echo "Done and done."
    exit
  fi

done
